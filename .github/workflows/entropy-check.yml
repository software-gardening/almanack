# Used for displaying an entropy report for every PR opened to main
---
name: entropy-check

on:
  pull_request_target:
    branches:
      - main
  workflow_dispatch:

jobs:
  entropy-check:
    runs-on: ubuntu-latest
    permissions: write-all

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch the entire history of commits

      - name: Install python env
        uses: ./.github/actions/install-python-env
        with:
          fetch-depth: 0 # Ensure the action respects the desired fetch depth

      - name: Set PR Branch Environment Variables
        run: |
          echo "PR_BRANCH=${{ github.event.pull_request.head.ref }}" 
          echo "MAIN_BRANCH=${{ github.event.pull_request.base.ref }}" 

      - name: Debug GitHub Environment
        run: |
          echo "GITHUB_ENV path: $GITHUB_ENV"
          echo "Current directory:"
          pwd
          echo "Directory contents:"
          ls -l /home/runner/work/_temp/
          echo "Attempt to read $GITHUB_ENV:"
          if [ -f "$GITHUB_ENV" ]; then
            cat "$GITHUB_ENV"
          else
            echo "$GITHUB_ENV does not exist or is not accessible"
          fi

      # Runs the entropy calculation script and saves the output to a file
      - name: Process repository entropy
        run: |
          poetry run almanack process_pr_entropy \
          --repo_path '.' \
          --pr_branch '${{ env.PR_BRANCH }}' \
          --main_branch '${{ env.MAIN_BRANCH }}' > entropy_report.txt

      # Formats the entropy report and saves it to GitHub Actions env
      - name: Format Entropy Report
        run: |
          echo "REPORT_CONTENT<<EOF" >> $GITHUB_ENV
          echo "\`\`\`" >> $GITHUB_ENV
          cat entropy_report.txt >> $GITHUB_ENV
          echo "\`\`\`" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: PR comment
        uses: thollander/actions-comment-pull-request@v2
        with:
          message: ${{ env.REPORT_CONTENT }}
          comment_tag: execution
          mode: recreate
