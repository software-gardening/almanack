---
metrics:
  - name: "repo-path"
    id: "SGA-META-0001"
    result-type: "str"
    sustainability_correlation: 0
    description: >-
      Repository path (local directory).
    correction_guidance:
    fix_why:
    fix_how:
  - name: "repo-commits"
    id: "SGA-META-0002"
    result-type: "int"
    sustainability_correlation: 0
    description: >-
      Total number of commits for the repository.
    correction_guidance:
    fix_why:
    fix_how:
  - name: "repo-file-count"
    id: "SGA-META-0003"
    result-type: "int"
    sustainability_correlation: 0
    description: >-
      Total number of files tracked within the repository.
    correction_guidance:
    fix_why:
    fix_how:
  - name: "repo-commit-time-range"
    id: "SGA-META-0004"
    result-type: "tuple"
    sustainability_correlation: 0
    description: >-
      Starting commit and most recent commit for the repository.
    correction_guidance:
    fix_why:
    fix_how:
  - name: "repo-days-of-development"
    id: "SGA-META-0005"
    result-type: "int"
    sustainability_correlation: 0
    description: >-
      Integer representing the number of days of development
      between most recent commit and first commit.
    correction_guidance:
    fix_why:
    fix_how:
  - name: "repo-commits-per-day"
    id: "SGA-META-0006"
    result-type: "float"
    sustainability_correlation: 0
    description: >-
      Floating point number which represents the number of commits
      per day (using days of development).
    correction_guidance:
    fix_why:
    fix_how:
  - name: "almanack-table-datetime"
    id: "SGA-META-0007"
    result-type: "str"
    sustainability_correlation: 0
    description: >-
      String representing the date when this table was generated
      in the format of '%Y-%m-%dT%H:%M:%S.%fZ', for example:
      2024-11-22T18:20:30.123456Z .
    correction_guidance:
    fix_why:
    fix_how:
  - name: "almanack-version"
    id: "SGA-META-0008"
    result-type: "str"
    sustainability_correlation: 0
    description: >-
      String representing the version of the almanack which was used
      to generate this table.
    correction_guidance:
    fix_why:
    fix_how:
  - name: "repo-primary-language"
    id: "SGA-META-0009"
    result-type: "str"
    sustainability_correlation: 0
    description: >-
      Detected primary programming language of the repository.
    correction_guidance:
    fix_why:
    fix_how:
  - name: "repo-primary-license"
    id: "SGA-META-0010"
    result-type: "str"
    sustainability_correlation: 0
    description: >-
      Detected primary license of the repository.
    correction_guidance:
    fix_why:
    fix_how:
  - name: "repo-doi"
    id: "SGA-META-0011"
    result-type: "str"
    sustainability_correlation: 0
    description: >-
      Repository DOI value detected from CITATION.cff file.
    correction_guidance:
    fix_why:
    fix_how:
  - name: "repo-doi-publication-date"
    id: "SGA-META-0012"
    result-type: "str"
    sustainability_correlation: 0
    description: >-
      Repository DOI publication date detected from CITATION.cff file
      and OpenAlex.org.
    correction_guidance:
    fix_why:
    fix_how:
  - name: "repo-almanack-score"
    id: "SGA-META-0013"
    result-type: "dict"
    sustainability_correlation: 0
    description: >-
      Dictionary of length three, including the following: 1) number of
      Almanack boolean metrics that passed (numerator), 2) number of
      total Almanack boolean metrics considered (denominator), and 3) a
      score that represents how likely the repository will be maintained
      over time based (numerator / denominator).
    correction_guidance:
    fix_why:
    fix_how:
  - name: "repo-includes-readme"
    id: "SGA-GL-0001"
    result-type: "bool"
    sustainability_correlation: 1
    description: >-
      Boolean value indicating the presence of a README file
      in the repository.
    correction_guidance: >-
      Consider adding a README file to the repository.
    fix_why: >-
      A README file is essential for providing an overview of the project,
      its purpose, and how to use it.
      Many platforms like GitHub, GitLab, and Bitbucket use the README
      file to display project information prominently.
    fix_how: >-
      Create a README file in the root directory of your repository.
      Include sections such as project description, installation instructions,
      usage examples, and contribution guidelines.
      You can use Markdown to format the README for better readability.
      For example, you can start with a text editor or use an online
      Markdown editor to create your README file.
      Save it as `README.md` in the root of your repository.
      If you're using GitHub, you can also use their web interface to create
      and edit the README file directly.
  - name: "repo-includes-contributing"
    id: "SGA-GL-0002"
    result-type: "bool"
    sustainability_correlation: 1
    description: >-
      Boolean value indicating the presence of a CONTRIBUTING file
      in the repository.
    correction_guidance: >-
      Consider adding a CONTRIBUTING file to the repository.
    fix_why: >-
      A CONTRIBUTING file is important for guiding potential contributors
      on how to contribute to the project, including coding standards,
      pull request guidelines, and other relevant information.
      It helps maintain a consistent contribution process and encourages
      community involvement.
    fix_how: >-
      Create a CONTRIBUTING file in the root directory of your repository.
      Include guidelines for contributing, such as coding standards,
      pull request instructions, and any other relevant information.
      You can use Markdown to format the CONTRIBUTING file for better
      readability.
      For example, you can start with a text editor or use an online
      Markdown editor to create your CONTRIBUTING file.
      Save it as `CONTRIBUTING.md` in the root of your repository.
      If you're using GitHub, you can also use their web interface to create
      and edit the CONTRIBUTING file directly.
  - name: "repo-includes-code-of-conduct"
    id: "SGA-GL-0003"
    result-type: "bool"
    sustainability_correlation: 1
    description: >-
      Boolean value indicating the presence of a CODE_OF_CONDUCT file
      in the repository.
    correction_guidance: >-
      Consider adding a CODE_OF_CONDUCT file to the repository.
    fix_why: >-
      A CODE_OF_CONDUCT file is essential for establishing a respectful
      and inclusive community within the project. It sets expectations
      for behavior, helps prevent harassment, and provides a framework
      for resolving conflicts.
    fix_how: >-
      Create a CODE_OF_CONDUCT file in the root directory of your repository.
      Include guidelines for acceptable behavior, reporting procedures,
      and any other relevant information.
      You can use Markdown to format the CODE_OF_CONDUCT file for better
      readability.
      For example, you can start with a text editor or use an online
      Markdown editor to create your CODE_OF_CONDUCT file.
      Save it as `CODE_OF_CONDUCT.md` in the root of your repository.
      If you're using GitHub, you can also use their web interface to create
      and edit the CODE_OF_CONDUCT file directly.
  - name: "repo-includes-license"
    id: "SGA-GL-0004"
    result-type: "bool"
    sustainability_correlation: 1
    description: >-
      Boolean value indicating the presence of a LICENSE file
      in the repository.
    correction_guidance: >-
      Consider adding a LICENSE file to the repository.
    fix_why: >-
      A LICENSE file is crucial for defining the terms under which
      the code can be used, modified, and distributed. It helps
      protect both the authors and users of the code by clarifying
      legal rights and responsibilities.
    fix_how: >-
      Create a LICENSE file in the root directory of your repository.
      Include the text of the license you wish to apply to your code.
      You can choose from existing open-source licenses, such as MIT,
      Apache 2.0, or GPL, depending on your project's needs.
      For example, you can start with a text editor or use an online
      license generator to create your LICENSE file.
      Save it as `LICENSE` or `LICENSE.txt` in the root of your repository.
      If you're using GitHub, you can also use their web interface to create
      and edit the LICENSE file directly.
  - name: "repo-is-citable"
    id: "SGA-GL-0005"
    result-type: "bool"
    sustainability_correlation: 1
    description: >-
      Boolean value indicating the presence of a CITATION file
      or some other means of indicating how to cite the work.
    correction_guidance: >-
      Consider adding a CITATION file to the repository
      (e.g. citation.cff, etc.).
    fix_why: >-
      A CITATION file is important for providing a standardized way
      to cite the work, making it easier for others to reference and
      acknowledge the project in their own work. It helps promote
      the visibility and impact of the project within the academic
      and research communities.
    fix_how: >-
      Create a CITATION file in the root directory of your repository.
      Include information on how to cite the work, such as the authors,
      title, publication date, and any relevant identifiers (e.g., DOI).
      You can use the Citation File Format (CFF) standard to structure
      the CITATION file for better compatibility with citation tools.
      For example, you can start with a text editor or use an online
      CFF editor to create your CITATION file.
      Save it as `CITATION.cff` in the root of your repository.
      If you're using GitHub, you can also use their web interface to create
      and edit the CITATION file directly.
  - name: "repo-default-branch-not-master"
    id: "SGA-GL-0006"
    result-type: "bool"
    sustainability_correlation: 1
    description: >-
      Boolean value indicating that the repo uses a
      default branch name besides 'master'.
    correction_guidance: >-
      Consider using a default source control
      branch name other than 'master'.
    fix_why: >-
      Using a default branch name other than 'master'
      is more collaborative and avoids possible
      negative historical connotations associated
      with the term.
    fix_how: >-
      Change the default branch name in your
      source control platform (e.g., GitHub, GitLab,
      Bitbucket) to a more inclusive term like 'main',
      'develop', or any other preferred name.
      This can usually be done through the repository
      settings or by renaming the branch locally and
      pushing the changes to the remote repository.
  - name: "repo-includes-common-docs"
    id: "SGA-GL-0007"
    result-type: "bool"
    sustainability_correlation: 1
    description: >-
      Boolean value indicating whether the repo includes
      common documentation directory and files associated
      with building docsites.
    correction_guidance: >-
      Consider including project documentation through the
      'docs/' directory.
    fix_why: >-
      Including a 'docs/' directory with common documentation files
      helps in maintaining a clear structure for project documentation,
      making it easier for contributors and users to find relevant information.
      It also promotes better collaboration and understanding of the project.
    fix_how: >-
      Create a 'docs/' directory in the root of your repository.
      Inside this directory, include common documentation files such as
      'index.md', 'CONTRIBUTING.md', 'CODE_OF_CONDUCT.md', and any other
      relevant documentation files that provide information about the project,
      its usage, and contribution guidelines.
      You can use Markdown to format these files for better readability.
      If you're using GitHub, you can also use their web interface to create
      and edit these files directly within the 'docs/' directory.
  - name: "repo-unique-contributors"
    id: "SGA-GL-0008"
    result-type: "int"
    sustainability_correlation: 0
    description: >-
      Count of unique contributors since the beginning
      of the repository.
    correction_guidance:
    fix_why:
    fix_how:
  - name: "repo-unique-contributors-past-year"
    id: "SGA-GL-0009"
    result-type: "int"
    sustainability_correlation: 0
    description: >-
      Count of unique contributors within the last year
      from now (where now is a reference to table value
      of almanack-table-datetime).
    correction_guidance:
    fix_why:
    fix_how:
  - name: "repo-unique-contributors-past-182-days"
    id: "SGA-GL-0010"
    result-type: "int"
    sustainability_correlation: 0
    description: >-
      Count of unique contributors within the last 182 days
      from now (where now is a reference to table value
      of almanack-table-datetime).
    correction_guidance:
    fix_why:
    fix_how:
  - name: "repo-tags-count"
    id: "SGA-GL-0011"
    result-type: "int"
    sustainability_correlation: 0
    description: >-
      Count of the number of tags within the repository.
    correction_guidance:
    fix_why:
    fix_how:
  - name: "repo-tags-count-past-year"
    id: "SGA-GL-0012"
    result-type: "int"
    sustainability_correlation: 0
    description: >-
      Count of the number of tags within the repository
      within the last year from now (where now is a
      reference to table value of almanack-table-datetime).
    correction_guidance:
    fix_why:
    fix_how:
  - name: "repo-tags-count-past-182-days"
    id: "SGA-GL-0013"
    result-type: "int"
    sustainability_correlation: 0
    description: >-
      Count of the number of tags within the repository
      within the last 182 days from now (where now is a
      reference to table value of almanack-table-datetime).
    correction_guidance:
    fix_why:
    fix_how:
  - name: "repo-stargazers-count"
    id: "SGA-GL-0014"
    result-type: "int"
    sustainability_correlation: 0
    description: >-
      Count of the number of stargazers on repository
      remote hosting platform.
    correction_guidance:
    fix_why:
    fix_how:
  - name: "repo-uses-issues"
    id: "SGA-GL-0015"
    result-type: "bool"
    sustainability_correlation: 1
    description: >-
      Whether the repository uses issues (for example, as a bug and/or
      feature tracking tool.
    correction_guidance: >-
      Consider leveraging issues for tracking bugs and/or features
      within your repository hosting platform.
    fix_why: >-
      Using issues for tracking bugs and features helps in maintaining
      a clear record of project development, facilitates collaboration,
      and allows for better prioritization of tasks.
    fix_how: >-
      Enable issues on your repository hosting platform (e.g., GitHub,
      GitLab, Bitbucket) if not already enabled. This can usually be done
      through the repository settings or by creating an issue template.
      Encourage contributors to use issues for reporting bugs, suggesting
      features, and discussing project-related topics.
  - name: "repo-issues-open-count"
    id: "SGA-GL-0016"
    result-type: "int"
    sustainability_correlation: 0
    description: >-
      Count of open issues for repository.
    correction_guidance:
    fix_why:
    fix_how:
  - name: "repo-pull-requests-enabled"
    id: "SGA-GL-0017"
    result-type: "bool"
    sustainability_correlation: 1
    description: >-
      Whether the repository enables pull requests.
    correction_guidance: >-
      Consider enabling pull requests for the repository
      through your repository hosting platform.
    fix_why:
    fix_how:
  - name: "repo-forks-count"
    id: "SGA-GL-0018"
    result-type: "int"
    sustainability_correlation: 0
    description: >-
      Count of forks of the repository.
    correction_guidance:
    fix_why:
    fix_how:
  - name: "repo-subscribers-count"
    id: "SGA-GL-0019"
    result-type: "int"
    sustainability_correlation: 0
    description: >-
      Count of subscribers (or watchers) of the repository.
    correction_guidance:
    fix_why:
    fix_how:
  - name: "repo-packages-ecosystems"
    id: "SGA-GL-0020"
    result-type: "list"
    sustainability_correlation: 0
    description: >-
      List of package platforms or services where the repository
      was detected (leveraging the ecosyste.ms packages API).
    correction_guidance:
    fix_why:
    fix_how:
  - name: "repo-packages-ecosystems-count"
    id: "SGA-GL-0021"
    result-type: "int"
    sustainability_correlation: 0
    description: >-
      Count of package platforms or services where the repository
      was detected (leveraging the ecosyste.ms packages API).
    correction_guidance:
    fix_why:
    fix_how:
  - name: "repo-packages-versions-count"
    id: "SGA-GL-0022"
    result-type: "int"
    sustainability_correlation: 0
    description: >-
      Count of package versions on package hosts or services
      where the repository was detected (leveraging the
      ecosyste.ms packages API).
    correction_guidance:
    fix_why:
    fix_how:
  - name: "repo-social-media-platforms"
    id: "SGA-GL-0023"
    result-type: "list"
    sustainability_correlation: 0
    description: >-
      Social media platforms detected within the readme.
    correction_guidance:
    fix_why:
    fix_how:
  - name: "repo-social-media-platforms-count"
    id: "SGA-GL-0024"
    result-type: "int"
    sustainability_correlation: 0
    description: >-
      Count of social media platforms detected within the readme.
    correction_guidance:
    fix_why:
    fix_how:
  - name: "repo-doi-valid-format"
    id: "SGA-GL-0025"
    result-type: "bool"
    sustainability_correlation: 1
    description: >-
      Whether the DOI found in the CITATION.cff file is of a valid
      format.
    correction_guidance: >-
      DOI within the CITATION.cff file is not of a valid format or missing.
    fix_why: >-
      A valid DOI format is essential for ensuring that the DOI can be
      resolved and used to reference the work correctly.
    fix_how: >-
      Ensure that the DOI in the CITATION.cff file follows the standard
      DOI format, which typically includes a prefix (e.g., 10.1234) and a
      suffix (e.g., 56789/abcde). The DOI should be in the format:
      `10.<prefix>/<suffix>`. If the DOI is missing or incorrectly formatted,
      update it to match the correct structure.
  - name: "repo-doi-https-resolvable"
    id: "SGA-GL-0026"
    result-type: "bool"
    sustainability_correlation: 1
    description: >-
      Whether the DOI found in the CITATION.cff file is HTTPS resolvable.
    correction_guidance: >-
      DOI within the CITATION.cff file is not HTTPS resolvable or missing.
    fix_why: >-
      An HTTPS resolvable DOI is crucial for ensuring that the DOI can be
      accessed securely and reliably, allowing users to retrieve the work
      associated with the DOI.
    fix_how: >-
      Verify that the DOI in the CITATION.cff file can be resolved using
      an HTTPS URL. The DOI should be formatted as:
      `https://doi.org/10.<prefix>/<suffix>`. If the DOI is not resolvable
      or does not use HTTPS, update it to ensure it points to a valid and
      secure URL.
  - name: "repo-doi-cited-by-count"
    id: "SGA-GL-0027"
    result-type: "int"
    sustainability_correlation: 0
    description: >-
      How many other works cite the DOI for the repository found within
      the CITATION.cff as discovered by the OpenAlex.org API.
    correction_guidance:
    fix_why:
    fix_how:
  - name: "repo-days-between-doi-publication-date-and-latest-commit"
    id: "SGA-GL-0028"
    result-type: "int"
    sustainability_correlation: 0
    description: >-
      The number of days between the most recent commit and DOI
      for the repository's publication date as discovered by
      the OpenAlex.org API.
    correction_guidance:
    fix_why:
    fix_how:
  - name: "repo-gh-workflow-success-ratio"
    id: "SGA-SF-0001"
    result-type: "float"
    sustainability_correlation: 0
    description: >-
      Ratio of succeeding workflow runs out of queried
      workflow runs from GitHub (only applies to GitHub
      hosted repositories which use workflows).
    correction_guidance:
    fix_why:
    fix_how:
  - name: "repo-gh-workflow-succeeding-runs"
    id: "SGA-SF-0002"
    result-type: "int"
    sustainability_correlation: 0
    description: >-
      Number of succeeding workflow runs out of queried
      workflow runs from GitHub (only applies to GitHub
      hosted repositories which use workflows).
    correction_guidance:
    fix_why:
    fix_how:
  - name: "repo-gh-workflow-failing-runs"
    id: "SGA-SF-0003"
    result-type: "int"
    sustainability_correlation: 0
    description: >-
      Number of failing workflow runs out of queried
      workflow runs from GitHub (only applies to GitHub
      hosted repositories which use workflows).
    correction_guidance:
    fix_why:
    fix_how:
  - name: "repo-gh-workflow-queried-total"
    id: "SGA-SF-0004"
    result-type: "int"
    sustainability_correlation: 0
    description: >-
      Total number of workflow runs from GitHub
      (only applies to GitHub hosted repositories
      which use workflows).
    correction_guidance:
    fix_why:
    fix_how:
  - name: "repo-code-coverage-percent"
    id: "SGA-SF-0005"
    result-type: "float"
    sustainability_correlation: 0
    description: >-
      Percentage of code coverage for repository
      given detected code coverage data.
    correction_guidance:
    fix_why:
    fix_how:
  - name: "repo-date-of-last-coverage-run"
    id: "SGA-SF-0006"
    result-type: "str"
    sustainability_correlation: 0
    description: >-
      Date of code coverage run for repository
      given detected code coverage data.
    correction_guidance:
    fix_why:
    fix_how:
  - name: "repo-days-between-last-coverage-run-latest-commit"
    id: "SGA-SF-0007"
    result-type: "int"
    sustainability_correlation: 0
    description: >-
      Days between last coverage run date and latest commit date.
    correction_guidance:
    fix_why:
    fix_how:
  - name: "repo-code-coverage-total-lines"
    id: "SGA-SF-0008"
    result-type: "int"
    sustainability_correlation: 0
    description: >-
      Total lines of code used for code coverage within repository
      given detected code coverage data.
    correction_guidance:
    fix_why:
    fix_how:
  - name: "repo-code-coverage-executed-lines"
    id: "SGA-SF-0009"
    result-type: "int"
    sustainability_correlation: 0
    description: >-
      Total lines covered code within repository
      given detected code coverage data.
    correction_guidance:
    fix_why:
    fix_how:
  - name: "repo-agg-info-entropy"
    id: "SGA-VS-0001"
    result-type: "float"
    sustainability_correlation: 0
    description: >-
      Aggregated information entropy for all files within a repository
      given a range between two commits (by default, the first and
      latest commits). Represents value from 0 to 1 where 0 equals
      no information entropy and 1 represents maximum information
      entropy.
    correction_guidance:
    fix_why:
    fix_how:
  - name: "repo-file-info-entropy"
    id: "SGA-VS-0002"
    result-type: "dict"
    sustainability_correlation: 0
    description: >-
      File-level information entropy for all files within a repository
      given a range between two commits (by default, the first and
      latest commits). Shows all files and their corresponding
      information entropy measurements relative to the other files
      found within the range of commits.
    correction_guidance:
    fix_why:
    fix_how:
